// Generated by dojo-bindgen on Thu, 5 Sep 2024 16:48:40 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;

namespace System.Runtime.CompilerServices
{
    internal class IsExternalInit { }
}

// Type definition for `core::byte_array::ByteArray` struct
[Serializable]
public struct ByteArray
{
    public string[] data;
    public FieldElement pending_word;
    public uint pending_word_len;
}

// Type definition for `core::option::Option::<core::integer::u32>` enum
public abstract record Option<A>() : Enum
{
    public record Some(A value) : Option<A>;
    public record None() : Option<A>;
}


// Model definition for `brewmaster::models::manager::ManagerSignature` model
public class ManagerSignature : ModelInstance
{
    [ModelField("system")]
    public FieldElement system;

    [ModelField("msgHash")]
    public FieldElement msgHash;

    [ModelField("isUsed")]
    public bool isUsed;

    // Start is called before the first frame update
    void Start()
    {
    }

    // Update is called once per frame
    void Update()
    {
    }
}
